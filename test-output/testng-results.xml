<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="9" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-10T07:43:56 IST" name="Suite" finished-at="2021-09-10T07:43:59 IST" duration-ms="3630">
    <groups>
    </groups>
    <test started-at="2021-09-10T07:43:56 IST" name="Test" finished-at="2021-09-10T07:43:59 IST" duration-ms="3551">
      <class name="SeleniumAuto.MarutiCar">
        <test-method signature="openUrl()[pri:0, instance:SeleniumAuto.MarutiCar@3c7f66c4]" started-at="2021-09-10T07:43:56 IST" name="openUrl" finished-at="2021-09-10T07:43:59 IST" duration-ms="3483" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: cannot find Chrome binary
Build info: version: '4.0.0-alpha-4', revision: 'c2d955b49e'
System info: host: 'DESKTOP-SGDSSG9', ip: '192.168.0.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00AD87E3+2852835]
Ordinal0 [0x009C5BB1+1727409]
Ordinal0 [0x0089E4B9+517305]
Ordinal0 [0x0082CA98+51864]
Ordinal0 [0x0084D9F7+186871]
Ordinal0 [0x0084D7FD+186365]
Ordinal0 [0x0084B70B+177931]
Ordinal0 [0x00832584+75140]
Ordinal0 [0x00833650+79440]
Ordinal0 [0x008335E9+79337]
Ordinal0 [0x009DAD5C+1813852]
GetHandleVerifier [0x00BFC616+1075574]
GetHandleVerifier [0x00BFC367+1074887]
GetHandleVerifier [0x00C07497+1120247]
GetHandleVerifier [0x00BFCC16+1077110]
Ordinal0 [0x009D3206+1782278]
Ordinal0 [0x009DC3BB+1819579]
Ordinal0 [0x009DC523+1819939]
Ordinal0 [0x009F2B45+1911621]
BaseThreadInitThunk [0x7613FA29+25]
RtlGetAppContainerNamedObjectPath [0x776175F4+228]
RtlGetAppContainerNamedObjectPath [0x776175C4+180]
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot find Chrome binary
Build info: version: '4.0.0-alpha-4', revision: 'c2d955b49e'
System info: host: 'DESKTOP-SGDSSG9', ip: '192.168.0.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00AD87E3+2852835]
Ordinal0 [0x009C5BB1+1727409]
Ordinal0 [0x0089E4B9+517305]
Ordinal0 [0x0082CA98+51864]
Ordinal0 [0x0084D9F7+186871]
Ordinal0 [0x0084D7FD+186365]
Ordinal0 [0x0084B70B+177931]
Ordinal0 [0x00832584+75140]
Ordinal0 [0x00833650+79440]
Ordinal0 [0x008335E9+79337]
Ordinal0 [0x009DAD5C+1813852]
GetHandleVerifier [0x00BFC616+1075574]
GetHandleVerifier [0x00BFC367+1074887]
GetHandleVerifier [0x00C07497+1120247]
GetHandleVerifier [0x00BFCC16+1077110]
Ordinal0 [0x009D3206+1782278]
Ordinal0 [0x009DC3BB+1819579]
Ordinal0 [0x009DC523+1819939]
Ordinal0 [0x009F2B45+1911621]
BaseThreadInitThunk [0x7613FA29+25]
RtlGetAppContainerNamedObjectPath [0x776175F4+228]
RtlGetAppContainerNamedObjectPath [0x776175C4+180]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$1(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:139)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:216)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:136)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:75)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:163)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:150)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:105)
at SeleniumAuto.MarutiCar.openUrl(MarutiCar.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openUrl -->
        <test-method signature="servise()[pri:0, instance:SeleniumAuto.MarutiCar@3c7f66c4]" started-at="2021-09-10T07:43:59 IST" name="servise" finished-at="2021-09-10T07:43:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- servise -->
        <test-method signature="welcome()[pri:0, instance:SeleniumAuto.MarutiCar@3c7f66c4]" started-at="2021-09-10T07:43:59 IST" name="welcome" finished-at="2021-09-10T07:43:59 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- welcome -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:SeleniumAuto.MarutiCar@3c7f66c4]" started-at="2021-09-10T07:43:59 IST" name="afterTest" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- SeleniumAuto.MarutiCar -->
    </test> <!-- Test -->
    <test started-at="2021-09-10T07:43:59 IST" name="Test1" finished-at="2021-09-10T07:43:59 IST" duration-ms="26">
      <class name="SeleniumAuto.ToyotaCar">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:SeleniumAuto.ToyotaCar@229c6181]" started-at="2021-09-10T07:43:59 IST" name="beforeTest" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="catlog()[pri:0, instance:SeleniumAuto.ToyotaCar@229c6181]" started-at="2021-09-10T07:43:59 IST" name="catlog" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catlog -->
        <test-method signature="servise()[pri:0, instance:SeleniumAuto.ToyotaCar@229c6181]" started-at="2021-09-10T07:43:59 IST" name="servise" finished-at="2021-09-10T07:43:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- servise -->
        <test-method signature="welcome()[pri:0, instance:SeleniumAuto.ToyotaCar@229c6181]" started-at="2021-09-10T07:43:59 IST" name="welcome" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- welcome -->
      </class> <!-- SeleniumAuto.ToyotaCar -->
      <class name="SeleniumAuto.AudiCar">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="beforeTest" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="welcome(java.lang.String)[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="welcome" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[channelsTanmay.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- welcome -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="beforeMethod" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="catlog()[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="catlog" finished-at="2021-09-10T07:43:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- catlog -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="beforeMethod" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="servise()[pri:0, instance:SeleniumAuto.AudiCar@791f145a]" started-at="2021-09-10T07:43:59 IST" name="servise" finished-at="2021-09-10T07:43:59 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- servise -->
      </class> <!-- SeleniumAuto.AudiCar -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
